using HotChocolate.Types;

namespace HotChocolate.Extensions.Tracking;

public static class ObjectFieldDescriptorExtensions
{
    /// <summary>
    /// Makes a Field trackable with a custom TrackingEntry structure.
    /// This structure (Poco) is generated by the factory.
    /// </summary>
    /// <param name="fieldDescriptor">the HotChocolate Field</param>
    /// <param name="factory">The factory that generates the tracking entry.</param>
    /// <returns></returns>
    /// <remarks>
    /// A trackable Field is only tracked if the caller adds
    /// the @track directive to it in his query
    /// </remarks>
    public static IObjectFieldDescriptor Trackable(
        this IObjectFieldDescriptor fieldDescriptor,
        ITrackingEntryFactory factory)
        => fieldDescriptor.Directive(new TrackableDirective(factory));

    /// <summary>
    /// Makes a Field tracked with a custom TrackingEntry structure.
    /// This structure (Poco) is generated by the factory.
    /// </summary>
    /// <param name="fieldDescriptor">the HotChocolate Field</param>
    /// <param name="factory">The factory that generates the tracking entry.</param>
    /// <returns></returns>
    /// <remarks>
    /// A tracked Field is always tracked. The caller does not need to add
    /// the @track directive to it in his query
    /// </remarks>
    public static IObjectFieldDescriptor Track(
        this IObjectFieldDescriptor fieldDescriptor,
        ITrackingEntryFactory factory)
        => fieldDescriptor.Directive(new TrackedDirective(factory));
}
